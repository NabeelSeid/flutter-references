import 'dart:async';

import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

import 'package:internationalization/l10n/messages_all.dart';

/// Localizaton for loading and lookup objects that contain localized values
class AppLocalization {
  // loads localized value based on given locale
  static Future<AppLocalization> load(Locale locale) {
    final String name =
        locale.countryCode.isEmpty ? locale.languageCode : locale.toString();

    final String localeName = Intl.canonicalizedLocale(name);

    // this method is auto generated by intl generator
    return initializeMessages(localeName).then((_) {
      Intl.defaultLocale = localeName;
      return AppLocalization();
    });
  }

  // shorthand for the Localization of() method
  static AppLocalization of(BuildContext context) =>
      Localizations.of<AppLocalization>(context, AppLocalization);

  // set up lookups for localized values
  String get title {
    return Intl.message(
      'Internationalization',
      name: 'title',
    );
  }

  String get bodyText {
    return Intl.message(
      'Hello World',
      name: 'bodyText',
    );
  }
}

class AppLocalizationDelegate extends LocalizationsDelegate<AppLocalization> {
  @override
  bool isSupported(Locale locale) =>
      ['en', 'am', 'es'].contains(locale.languageCode);

  @override
  Future<AppLocalization> load(Locale locale) => AppLocalization.load(locale);

  @override
  bool shouldReload(AppLocalizationDelegate old) => false;
}
